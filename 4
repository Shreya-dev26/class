//write an alp prog to disp content of gdtr idtr ldtr tr msw

Section .Data (declare Data segment)

; initialized variable Declaration
Section .BSS (declare Block Starting Symbol segment)

; uninitialized variable Declaration

Section .Text (declare Code segment)
Global _start (Entry point for program)
_Start:

;Program code goes here
; semicolon is used to give the comment

//theory
SGDT

• Stores the content of the global descriptor table register (GDTR) in the
destination operand.
• The destination operand specifies a memory location. In legacy or
compatibility mode, the destination operand is a 8+2=10 Byte (80 Bit)
memory location.
• The 16-bit limit field of the register is stored in the low 2 bytes of the
memory location and the 64-bit base address is stored in the higher 8
bytes.
Operation
DEST := 80-bit BASE/LIMIT register contents;
• Linear Base Address (64 bit)
• Table Limit (16 bit)


SIDT

• Stores the content the interrupt descriptor table register
(IDTR) in the destination operand.
• The destination operand specifies a 10-byte (80 bits) memory
location.
• The 16-bit limit field of the register is stored in the low 2 bytes
of the memory location and the 64-bit base address is stored
in the higher 8 bytes.
Opération:
DEST := 80-bit BASE/LIMIT register contents
• Linear Base Address (64 bit)
• Table Limit (16 bit)

SLDT

• Stores the segment selector from the local descriptor
table register (LDTR) in the destination operand.
•The destination operand can be a general-purpose
register or a memory location.
•The segment selector stored with this instruction points
to the segment descriptor (located in the GDT) for the
current LDT.

09-01-2023 MMCL Assignment 4:Write an ALP to display the contents of GDTR, IDTR, LDTR,TR, MSW. 9

STR

• Stores the segment selector from the task register (TR)
in the destination operand.
• The destination operand can be a general-purpose
register or a memory location.
• The segment selector stored with this instruction points to
the task state segment (TSS) for the currently running
task.
• When the destination operand is a memory location, the
segment selector is written to memory as a 16-bit
quantity, regardless of operand size.

09-01-2023 MMCL Assignment 4:Write an ALP to display the contents of GDTR, IDTR, LDTR,TR, MSW. 10
• Stores the Machine Status

SMSW
Word (bits 0 through 15 of control register

CR0) into the destination operand.
• The destination operand can be a general-purpose register or a memory
location.
• The low-order 16 bits of register CR0 are copied into the 16 bits of the
register.
• When the destination operand is a memory location, the low-order 16
bits of register CR0 are written to memory as a 16-bit quantity

//codes

Code for Data Section Initialization
section .data
msg1 db "Base Address : ",10
msgl1 equ $-msg1
msg2 db "Offset : ",10
msgl2 equ $-msg2
msg3 db "Global descriptor table register",10
msgl3 equ $-msg3
msg4 db "Interrupt descriptor table register",10
msgl4 equ $-msg4
msg5 db "Local descriptor table register",10
msgl5 equ $-msg5
msg6 db "Task register",10
msgl6 equ $-msg6
msg7 db "Machine status word",10
msgl7 equ $-msg7
newl db 0AH

09-01-2023 MMCL Assignment 4:Write an ALP to display the contents of GDTR, IDTR, LDTR,TR, MSW. 12
Code for Macro and bss Section

%macro operate 4
mov rax,%1
mov rdi,%2
mov rsi,%3
mov rdx,%4
syscall
%endmacro
section .bss
gdtr resq 1 ;quad word=64 bits
gdtlimit resw 1
idtr resq 1
idtlimit resw 1
ldtr resw 1
tr resw 1
msw resw 1
temp64 resq 1 ; After swapping
temp16 resw 1 ; After swapping
asc resb 1 ;before displaying store single ASCII value

09-01-2023 MMCL Assignment 4:Write an ALP to display the contents of GDTR, IDTR, LDTR,TR, MSW. 13
Code to Display contents of Register (GDTR)
section .text
global _start _
start:
operate 1,1,msg3,msgl3 ;Global descriptor table register-GDTR
operate 1,1,msg1,msgl1 ;Base Address 8 bytes (64 Bits)
mov rsi,gdtr ;rsi points to gdtr
sgdt [rsi] ;Stores the contents of the global descriptor table register (GDTR) in the
;destination operand. The destination operand specifies a 8-byte memory location. In ;64-bit
;mode, the operand size is fixed at 8+2 bytes.The instruction stores an 8-byte base ;and a 2-
;byte limit
mov rax,[rsi] ;move contents of rsi in rax
call display64
operate 1,1,newl,1 ;New Line
operate 1,1,msg2,msgl2 ;Offset-Limit 16 Bits
mov rsi,gdtlimit ;set rsi such that it points to gdtlimit
mov ax,[rsi]
call display16

09-01-2023 MMCL Assignment 4:Write an ALP to display the contents of GDTR, IDTR, LDTR,TR, MSW. 14
Code to Display contents of Register (IDTR)

operate 1,1,newl,1
operate 1,1,msg4,msgl4 ;Interrupt descriptor table register-IDTR
operate 1,1,newl,1
operate 1,1,msg1,msgl1 ;Base address 64 bits (8 Bytes)
mov rsi,idtr ;set rsi to idtr
sidt [rsi]
mov rax,[rsi]
call display64
operate 1,1,newl,1
operate 1,1,msg2,msgl2 ;Offset-Limit 16 bits
mov rsi,idtlimit ;set rsi to idtlimit
mov ax,[rsi]
call display16

09-01-2023 MMCL Assignment 4:Write an ALP to display the contents of GDTR, IDTR, LDTR,TR, MSW. 15
Code to Display contents of Register (LDTR)
operate 1,1,newl,1
operate 1,1,msg5,msgl5 ;Local descriptor table register-LDTR
operate 1,1,newl,1
operate 1,1,msg1,msgl1 ;Base Address 16 Bits
mov rsi,ldtr ;set rsi to ldtr
sldt [rsi]
mov ax,[rsi]
call display16

09-01-2023 MMCL Assignment 4:Write an ALP to display the contents of GDTR, IDTR, LDTR,TR, MSW. 16
Code to Display contents of Register (TR) Task Register
operate 1,1,newl,1
operate 1,1,msg6,msgl6 ; Task register (TR)
operate 1,1,newl,1
operate 1,1,msg1,msgl1 ; Base Address 16 Bits
mov rsi,tr ;set rsi to tr
str [rsi]
mov ax,[rsi]
call display16

09-01-2023 MMCL Assignment 4:Write an ALP to display the contents of GDTR, IDTR, LDTR,TR, MSW. 17
Code to Display contents of Register (MSW)
operate 1,1,newl,1
operate 1,1,msg7,msgl7 ;(MSW) Machine status word
operate 1,1,newl,1
operate 1,1,msg1,msgl1 ;Base Address 16 Bits
mov rsi,msw ;set rsi to msw
smsw [rsi]
mov ax,[rsi]
call display16

operate 60,0,0,0

09-01-2023 MMCL Assignment 4:Write an ALP to display the contents of GDTR, IDTR, LDTR,TR, MSW. 18
Code to Display 64 bit contents stored in rax
display64:
mov bp,16
again1: ;set counter for 16 digit number=64 bits= FE000002D000007F
rol rax,4
mov [temp64],rax
and rax,0FH
cmp rax,09H
jbe skip64
add al,07H

skip64 :

add al,30H
mov [asc],al

operate 1,1,asc,1 ; asc- before displaying store single ASCII value

mov rax,[temp64]
dec bp
jnz again1
ret

19

09-01-2023 MMCL Assignment 4:Write an ALP to display the contents of GDTR, IDTR, LDTR,TR, MSW. 20
Code to Display 16 bit contents stored in AX
display16:
mov bp,4 ;set counter for 4 digit number=16 bits=0033
again2:
rol ax,4
mov [temp16],ax
and ax,0FH
cmp al,09H
jbe skip16
add al,07H
skip16 :
add al,30H
mov [asc],al
operate 1,1,temp,1
mov ax,[res16]
dec bp
jnz again2
ret

09-01-2023 MMCL Assignment 4:Write an ALP to display the contents of GDTR, IDTR, LDTR,TR, MSW. 21
SAMPLE OUTPUT

Global descriptor table register Base Address : 88007D644000007F
Offset : FFFF

Interrupt descriptor table register Base Address :FFF81DD70000FFF
Offset : FFFF

Local descriptor table register Base Address : 0000

Task register Base Address : 0040

Machine status word Base Address : 0033; MSW: 0000 0000 0011 0011: PG
